package com.polly.pack;  import meteordevelopment.meteorclient.events.world.TickEvent; import meteordevelopment.meteorclient.settings.*; import meteordevelopment.meteorclient.systems.modules.Module; import meteordevelopment.meteorclient.systems.modules.ModuleCategory; import meteordevelopment.orbit.EventHandler; import net.minecraft.client.MinecraftClient; import net.minecraft.client.network.PlayerListEntry; import net.minecraft.text.Text;  import java.util.ArrayList; import java.util.List;  public class PlayerTracker extends Module {     private final SettingGroup sgGeneral = settings.getDefaultGroup();      private final Setting<List<String>> trackedPlayers = sgGeneral.add(new StringListSetting.Builder()         .name("tracked-players")         .description("Players you want to be notified about when they are online.")         .defaultValue(new ArrayList<>(List.of("ExamplePlayer")))         .build()     );      private final Setting<String> serverFilter = sgGeneral.add(new StringSetting.Builder()         .name("server-filter")         .description("Only notify on this server (leave blank for all).")         .defaultValue("")         .build()     );      private final Setting<NotificationMode> notificationMode = sgGeneral.add(new EnumSetting.Builder<NotificationMode>()         .name("notification-mode")         .description("How to notify you when a tracked player is online.")         .defaultValue(NotificationMode.TOAST)         .build()     );      private final MinecraftClient mc = MinecraftClient.getInstance();     private boolean notified = false;      public PlayerTracker() {         super(ModuleCategory.MISC, "Player Tracker", "Notifies you when specified players are online.");     }      @EventHandler     private void onTick(TickEvent.Post event) {         if (mc.getNetworkHandler() == null || mc.getCurrentServerEntry() == null) return;          String currentIP = mc.getCurrentServerEntry().address;         if (!serverFilter.get().isEmpty() && !currentIP.contains(serverFilter.get())) return;          List<String> tracked = trackedPlayers.get();         for (PlayerListEntry player : mc.getNetworkHandler().getPlayerList()) {             String name = player.getProfile().getName();             if (tracked.contains(name)) {                 if (!notified) {                     notifyUser(name);                     notified = true;                 }                 return;             }         }          notified = false;     }      private void notifyUser(String playerName) {         switch (notificationMode.get()) {             case TOAST -> mc.inGameHud.setOverlayMessage(Text.of("§a" + playerName + " is online!"), false);             case CHAT -> mc.player.sendMessage(Text.of("§aTracked player online: " + playerName));             case TITLE -> mc.inGameHud.setTitle(Text.of("§a" + playerName + " joined!"));         }     }      public enum NotificationMode {         TOAST,         CHAT,         TITLE     } }
